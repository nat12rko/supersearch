<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>web</artifactId>
    <packaging>war</packaging>
    <name>web</name>
    <description>Super Search Web</description>

    <parent>
        <relativePath>../pom.xml</relativePath>
        <groupId>com.resurs.supersearch</groupId>
        <artifactId>supersearch</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <docker.component>web</docker.component>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>knockout</artifactId>
            <version>3.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>2.1.0-2</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>

                    <!--Specify what files should be included -->
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.7</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/docker-temp/web</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/target</directory>
                                            <includes>
                                                <include>*.war</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>${project.basedir}/../docker/script</directory>
                                            <includes>
                                                <include>*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.11.4</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <id>createandrun</id>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>${docker.servicename}.${docker.component}</name>
                                            <alias>${branchname}.${docker.servicename}.web</alias>
                                            <run>
                                                <namingStrategy>alias</namingStrategy>
                                                <envPropertyFile>${project.basedir}/../docker/config/${docker.hostname}/envFile.properties</envPropertyFile>
                                            </run>
                                            <build>
                                                <tags>
                                                    <tag>${branchname}</tag>
                                                </tags>
                                                <assembly>
                                                    <inline>
                                                        <dependencySet>
                                                            <includes>
                                                                <include>com.resurs.supersearch:web</include>
                                                            </includes>
                                                            <outputDirectory>.</outputDirectory>
                                                            <outputFileNameMapping>web.war</outputFileNameMapping>
                                                        </dependencySet>
                                                    </inline>
                                                    <exportBasedir>true</exportBasedir>
                                                    <dockerFileDir>${project.basedir}/target/docker-temp/web</dockerFileDir>
                                                </assembly>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>web</finalName>
    </build>

</project>
